<?xml version="1.0"?>
<ruleset name="Custom Rules"
    xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">
	<description>Configuration of PMD for Salesforce Apex, customized.</description>
	<exclude-pattern>.*/.sfdx/.*</exclude-pattern>
	<exclude-pattern>.*/.sf/.*</exclude-pattern>
	<!-- BEST PRACTICES -->

	<!-- COMPLEXITY -->
	<!-- PERFORMANCE -->
	<rule ref="category/apex/performance.xml/OperationWithLimitsInLoop" message="Avoid operations in loops that may hit governor limits">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/AvoidGlobalModifier" message="Avoid using global modifier">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidNonExistentAnnotations">
		<priority>1</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/AvoidHardcodingId" message="Avoid hardcoding ID's">
		<priority>2</priority>
	</rule>
	<!-- NAMING -->
	<rule ref="category/apex/codestyle.xml/ClassNamingConventions" message="Class names should begin with an uppercase character">
		<priority>2</priority>
	</rule>

	<rule ref="category/apex/errorprone.xml/MethodWithSameNameAsEnclosingClass" message="Classes should not have non-constructor methods with the same name as the class">
		<priority>1</priority>
	</rule>
	<!-- NAMING -->
	
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestShouldNotUseSeeAllDataTrue" message="@isTest(seeAllData=true) should not be used in Apex unit tests because it opens up the existing database data for unexpected modification by tests">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/bestpractices.xml/ApexUnitTestMethodShouldHaveIsTestAnnotation">
		<priority>2</priority>
	</rule>
	<!--    <rule ref="category/apex/bestpractices.xml/ApexAssertionsShouldIncludeMessage"/> -->
	<rule ref="category/apex/errorprone.xml/TestMethodsMustBeInTestClasses">
		<priority>1</priority>
	</rule>
	<!-- SECURITY -->
	
	<!-- EMPTY -->
	<rule ref="category/apex/errorprone.xml/EmptyCatchBlock" message="Avoid empty catch blocks">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyIfStmt" message="Avoid empty 'if' statements">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyWhileStmt" message="Avoid empty 'while' statements">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyTryOrFinallyBlock" message="Avoid empty try or finally blocks">
		<priority>2</priority>
	</rule>
	<rule ref="category/apex/errorprone.xml/EmptyStatementBlock" message="Avoid empty block statements.">
		<priority>2</priority>
	</rule>
	<!-- STYLE -->
	<rule ref="category/apex/codestyle.xml/OneDeclarationPerLine">
		<priority>1</priority>
	</rule>
	<!-- <rule ref="category/apex/codestyle.xml/FieldDeclarationsShouldBeAtStart"/> -->
	<!-- ERROR_PRONE -->
	<!-- CLARITY / BEST PRACTICES -->
	<!-- <rule ref="category/apex/bestpractices.xml/DebugsShouldUseLoggingLevel"><priority>4</priority></rule> -->
	<!-- <rule ref="category/apex/errorprone.xml/OverrideBothEqualsAndHashcode" /> -->
</ruleset>